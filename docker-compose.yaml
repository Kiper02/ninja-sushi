version: latest

services:
  db:
    container_name: ninja-db
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_HOST=${DB_HOST}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    ports:
      - 3308:3306
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always
    networks:
      - ninja-sushi-backend

  redis:
    container_name: redis
    image: redis:5.0
    restart: always
    ports:
      - 6380:6379
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - ninja-sushi-backend

  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.8
    restart: always
    ports:
      - ${ZOOKEEPER_PORT}:2181
    environment:
      ZOO_MY_ID: ${ZOO_MY_ID}
      ZOO_SERVERS: ${ZOO_SERVERS}
    volumes:
      - zookeeper_data:/data
    networks:
      - ninja-sushi-backend

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.0.1
    restart: always
    ports:
      - ${KAFKA_PORT}:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_HOST}:${KAFKA_PORT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    volumes:
      - kafka_data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      - ninja-sushi-backend

volumes:
  mysql_data:
  redis_data:
  zookeeper_data:
  kafka_data:

networks:
  ninja-sushi-backend: